<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_aliado</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ancho = 0;
alto = 0;
vida = 1;
vidaTotal = 0;
vel_ataque = 10;
damage = 10;
movimiento = 100;
armadura = 10;
alcance = 100;
selected = false;
estado = "defensa";
objetivo = 0;
pintarUi = false;
uiCreated = false;
borrarUi = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///////////reset pintar ui
if(uiCreated &amp;&amp; !selected)
{
    pintarUi = false;
    uiCreated = false;
    for(i=0;i&lt;array_length_1d(uiIcons);i++)
    {
        with (uiIcons[i]) instance_destroy();
    }
    borrarUi = false;
}
///////////patrullar//////
if(patrullar)
{    
    if(origx == x &amp;&amp; origy == y &amp;&amp; (destx != 0 || desty !=0))
    {        
        movin = true;        
    }
    if(volver)
    {
        mp_potential_step(origx,origy,velMovi,false);        
        if(origx == x &amp;&amp; origy == y)
        {
            volver = false;
        }
    }
    if(movin == true)
    {    
        mp_potential_step(destx,desty,velMovi,false);        
        if (distance_to_point(destx,desty) &lt; 60 &amp;&amp; !place_free(destx,desty))
        {
            movin = false;
            volver = true;        
        }
        if(destx == x &amp;&amp; desty == y)
        {
            movin = false;
            if(patrullar)
                volver = true;
        }
    }    
}
else
{
    ///////movimiento simple/////////
    if(movin == true)
    {       
        mp_potential_step(destx,desty,velMovi,false);        
        if ((distance_to_point(destx,desty) &lt; 25 &amp;&amp; !place_free(destx,desty)) || (destx == x &amp;&amp; desty == y))        
        {
            movin = false;
            destx = 0;
            desty = 0;
        }        
    }
}
/////////Atacar/////////
if(distance_to_object(obj_unit_enemigo) &lt; (vision * 230))
{
    switch(estado)
    {
        case "defensa":
            objetivo = 0;
        break;
        case "ataque":
            if(patrullar == true || movin == false || objetivo != 0)
            {                
                near = instance_nearest(x,y,obj_unit_enemigo);
                movin = false;
                patrullar = false;
                volver = false;
                if(objetivo == 0)
                {
                    objetivo = near;                    
                }
                if(distance_to_object(objetivo) &gt;= alcance)
                {
                    if(instance_exists(objetivo))
                        mp_potential_step(objetivo.x,objetivo.y,velMovi,false);
                    else
                        objetivo = 0;                    
                }
                else
                {
                    //animacion atacar
                    if(objetivo.vida &gt; 0)
                    {
                        if(alarm[0] &lt; 0)
                        {
                            if(vel_vuelo == 0)
                            {
                                objetivo.vida = objetivo.vida - damage;
                                alarm[0] = vel_ataque;
                            }
                            else
                            {                            
                                flecha = instance_create(x,y,obj_flecha);
                                flecha.sprite_index = spr_flecha;
                                flecha.vel = vel_vuelo;
                                flecha.damage = damage;
                                flecha.objetivo = objetivo;
                                alarm[0] = vel_ataque;
                            }
                        }
                    }
                }
            }
        break;        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(type == "Aldeano")
{
    pintarUi = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pintarUi)
{
    xx = round(1700*global.interfaceScale);
    yy = round(930*global.interfaceScale);
    draw_sprite(sprite_index,0,500,950);
    if(!uiCreated)
    {
        uiIcons[0] = instance_create(xx,yy,obj_interface_cityhall);
        uiCreated = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(view_current == 0)
{
    xx = x - (ancho / 2) + 1;
    yy = y - (alto / 2) - 5;
    porciento = vida / vidaTotal;
    draw_set_color(c_green);
    draw_rectangle(xx,yy,xx + ((ancho - 1) * porciento) , yy + 5,false);
    draw_set_color(c_black);
    draw_rectangle(xx,yy,xx + (ancho - 1), yy + 5,true);
    draw_sprite(sprite_index,0,x,y);
    if(selected)
    {
        draw_set_color(c_dkgray);
        draw_circle(x,y,18,true);
    }
}
else
{
    draw_sprite(spr_minimap_unidad,0,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
