<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vida = 1;
vel_ataque = 10;
damage = 10;
movimiento = 100;
armadura = 10;
alcance = 100;
selected = false;
estado = "defensa";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///////////patrullar//////
if(patrullar)
{    
    if(origx == x &amp;&amp; origy == y &amp;&amp; (destx != 0 || desty !=0))
    {        
        movin = true;        
    }
    if(volver)
    {
        mp_potential_step(origx,origy,velMovi,false);        
        if(origx == x &amp;&amp; origy == y)
        {
            volver = false;
        }
    }
    if(movin == true)
    {    
        mp_potential_step(destx,desty,velMovi,false);        
        if (distance_to_point(destx,desty) &lt; 60 &amp;&amp; !place_free(destx,desty))
        {
            movin = false;
            volver = true;        
        }
        if(destx == x &amp;&amp; desty == y)
        {
            movin = false;
            if(patrullar)
                volver = true;
        }
    }    
}
else
{
    ///////movimiento simple/////////
    if(movin == true)
    {       
        mp_potential_step(destx,desty,velMovi,false);        
        if ((distance_to_point(destx,desty) &lt; 25 &amp;&amp; !place_free(destx,desty)) || (destx == x &amp;&amp; desty == y))        
        {
            movin = false;
            destx = 0;
            desty = 0;
        }        
    }
}
/////////Atacar/////////
if(distance_to_object(obj_unit_enemigo) &lt; (vision * 230))
{
    switch(estado)
    {
        case "defensa":
        break;
        case "ataque":
            objetivo = instance_nearest(x,y,obj_unit_enemigo);
            movin = false;
            patrullar = false;
            volver = false;
            if(distance_to_object(obj_unit_enemigo)&gt;= alcance)
                mp_potential_step(objetivo.x,objetivo.y,velMovi,false);
        break;
        case "uir":
        break;
    }
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
