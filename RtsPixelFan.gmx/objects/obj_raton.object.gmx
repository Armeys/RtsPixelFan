<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tamanoUnidadX=26;
global.tamanoUnidadY=46;
pintar = false;
minx = 9999;
maxx = 0;
miny = 9999;
maxy = 0;
banderasalida = 0;
banderadestino = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cantidad = 0;
//if(position_empty(mouse_x,mouse_y)) // si esta vacio
//{
    with(obj_stop) instance_destroy();
    with(obj_char_prueba)  ///contamos la cantidad de unidades que se van a mover y las posiciones minimas y maximas de la x y la y
    {        
        if(selected)
        {
            global.cantidad++;
            other.minx = min(other.minx,x);
            other.miny = min(other.miny,y);
            other.maxx = max(other.maxx,x);
            other.maxy = max(other.maxy,y);                                             
        }
    }
    /// calculo del numero de filas
    global.filas = round(sqrt(global.cantidad));
    
    /// calculo del numero de columnas de la unidad 3x3 -- 4x4 -- 5x5 --    
    if (global.cantidad &gt;0 &amp;&amp; global.cantidad &lt;=9)    
        global.columnas = 3;
    else if(global.cantidad &gt;9 &amp;&amp; global.cantidad &lt;=16)
        global.columnas = 4;        
    else if(global.cantidad &gt;16 &amp;&amp; global.cantidad &lt;=25)
        global.columnas = 5;
    else if(global.cantidad &gt;25 &amp;&amp; global.cantidad &lt;=36)
        global.columnas = 6;
    else if(global.cantidad &gt;36 &amp;&amp; global.cantidad &lt;=49)
        global.columnas = 7;
    else if(global.cantidad &gt;49 &amp;&amp; global.cantidad &lt;=64)
        global.columnas = 8;
    else if(global.cantidad &gt;64 &amp;&amp; global.cantidad &lt;=81)
        global.columnas = 9;
    else if(global.cantidad &gt;81 &amp;&amp; global.cantidad &lt;=100)
        global.columnas = 10;
    else if(global.cantidad &gt;100 &amp;&amp; global.cantidad &lt;=121)
        global.columnas = 11;    
    //comenzamos dibujando la formacion
    if(global.cantidad &gt;0)  
    {   
        if(global.cantidad &gt; 3) // formacion para mas de 3 unidades.
        {
            // calculamos x de la unidad de la esquina superior izq en relacion con el raton.       
            if(global.columnas % 2 == 0)/// si es par ay que restarle media unidad para que se centre con el raton.
                global.xxStart = mouse_x - ((global.tamanoUnidadX)*(floor(global.columnas/2)-0.5));
            else
                global.xxStart = mouse_x - ((global.tamanoUnidadX)*(floor(global.columnas/2)));
            global.xx = global.xxStart;    //posicion de la primera columna
            // calculamos y de la unidad de la esquina superior izq en relacion con el raton.
            if(global.filas % 2 == 0)
                global.yy = mouse_y - (global.tamanoUnidadY * (floor(global.filas/2)-0.5));
            else
                global.yy = mouse_y - (global.tamanoUnidadY * (floor(global.filas/2)));
        }
        else  // formacion para 3 o menso unidades.
        {
            switch(global.cantidad)
            {
                case 1:
                    global.xx = mouse_x;
                break;
                case 2:
                    global.xx = mouse_x - (global.tamanoUnidadX/2);
                break;
                case 3:
                    global.xx = mouse_x - global.tamanoUnidadX;
                break;
            } 
            global.yy = mouse_y;     
        }        
                       
        global.contador = 0; 
        if(global.patrullar) // calculamos donde vamos a colocar las banderas. la de inicio en el centro de la pisicion inicial de las unidades
        {                    // la de destino en la posicion del raton. les asignamos la cantidad de unidades q van a hacer esa patrulla.
            banderax = minx + ((maxx - minx)/2);
            banderay = miny + ((maxy - miny)/2);        
            banderasalida = instance_create(banderax,banderay,obj_bandera_patrulla);
            banderasalida.cantidad = global.cantidad;           
            banderadestino = instance_create(mouse_x,mouse_y,obj_bandera_patrulla);
            banderadestino.image_index = 1;
            banderadestino.cantidad = global.cantidad;            
        }
        
        with(obj_char_prueba)
        {     
            if(global.contador == global.columnas &amp;&amp; global.cantidad &gt;3)  // cuando coinciden saltamos a la siguiente fila
            {                
                global.yy = global.yy + global.tamanoUnidadY ;
                global.xx = global.xxStart;
                global.contador = 0;
            }            
            if(selected)//a√±adimos el movimiento a la unidad.
            {                
                if(banderadest != 0) //al volver a mover la unidad la restamos de su banderar para poder eliminar las banderas cuando no hay patrullas.
                {
                    with(obj_bandera_patrulla)
                    {
                        if(id == other.banderadest)
                        {
                            cantidad--;                            
                            other.banderadest = 0;
                        }
                        if(id == other.banderaorig)
                        {
                            cantidad--;                            
                            other.banderaorig = 0;
                        }
                    }
                }
                
                patrullar = false;
                movin = true;
                origx = x;
                origy = y;
                destx = global.xx;
                desty = global.yy;                
                banderadest = other.banderadestino;
                banderaorig = other.banderasalida;                              
                instance_create(global.xx,global.yy,obj_stop);
                global.xx = global.xx + global.tamanoUnidadX;
                global.contador++; 
                if(global.patrullar)
                {
                    patrullar = true;                     
                } 
            }            
        }
        global.patrullar = false;
        minx = 9999;
        maxx = 0;
        miny = 9999;
        maxy = 0;         
    }    
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pintar = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(position_empty(mouse_x,mouse_y))
{
    with(obj_char_prueba)selected = false;
}
pintar = true;
global.startx = mouse_x;
global.starty = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_text(mouse_x,mouse_y,string(mouse_x)+ " " + string(mouse_y) + " " + string(view_hview[0]));
if(pintar)
{
    draw_set_color(c_green);
    draw_rectangle(global.startx,global.starty,mouse_x,mouse_y,true);
    draw_set_alpha(0.3);
    draw_set_color(c_blue);
    draw_rectangle(global.startx,global.starty,mouse_x,mouse_y,false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
